# proxy reverso para lidar com as requisições e encaminhar para o microserviço correto

spring.application.name=api_gateway

server.port=8080

spring.cloud.gateway.routes[0].id=user_service
# spring.cloud.gateway.routes: expressão chave do Spring Cloud Gateway que indica a config de uma rota
spring.cloud.gateway.routes[0].uri=http://localhost:8083
# uri: url para onde a requisição vai ser encaminhada
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**
# predicates são condições que o gateway vai analisar na hora que receber a requisição, e encaminhar para o url, caso seja verdadeira
# no caso se a condição é a requsição conter "/api/users/"
# o ** no final significa que o gateway vai aceitar qualquer coisa que vier depois de "/api/users/", como "/api/users/register"

spring.cloud.gateway.routes[1].id=pet_service
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/pets/**

spring.cloud.gateway.routes[2].id=adoptions_service
spring.cloud.gateway.routes[2].uri=http://localhost:8082
# pet service também vai cuidar da parte de adoções
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/adoptions/**

spring.cloud.gateway.routes[3].id=notification_service
spring.cloud.gateway.routes[3].uri=http://localhost:8081
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/notifications/**
